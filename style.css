a:not(.button) {
    background: url("/images/external.svg") center right no-repeat;
    padding-right: 14px;
}

a.external-pdf {
    background: url("/images/pdf.png") center right no-repeat;
    padding-right: 20px;
}

a.button {
    background: none;
    cursor: pointer;
    text-decoration: none;
}

.options {
    display: flex;
    flex-wrap: wrap;
    max-width: 600px;
}

.options>div {
    white-space: nowrap;
    flex-grow: 1;
}

.options input {
    margin: auto;
}

#mods {
    position: relative;
}

#mods>h3 {
    margin: 0;
    padding: 0;
}

#mods>p {
    margin: 0;
    padding-top: 5px;
    padding-bottom: 10px;
}

summary {
    list-style: none;
    display: flex;
    padding: 6px;
    padding-top: 4px;
    user-select: none;
}

[open]:not(.hide-arrow) summary {
    border-bottom: 1px solid #f0f0f0;
}

:root {
    --symbol: ">"
}

summary::before {
    content: ">";
}

summary.legal-listing::before {
    content: var(--symbol);
}

summary span {
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
}

[open] summary::before {
    content: "v";
}

span.name-align {
    flex-grow: 1;
    padding-left: 5px;
    padding-right: 5px;
}

.mod-entry p {
    /* yikes */
    padding: 5px;
    padding-left: 8px;
    padding-bottom: 7px;
    margin: 0
}

.mod-entry {
    max-width: 600px;
    border: 1px solid #f0f0f0;
    border-bottom: 0;
}

.mod-entry:last-child {
    border: 1px solid #f0f0f0;
}

body {
    font-family: Consolas, monaco, monospace;
    background-color: black;
    color: #f0f0f0;
    max-width: 800px;
    margin-left: 20px;
    margin-right: 20px;
}

a {
    color: #bb86fc;
}

#version {
    background: inherit;
    font: inherit;
    border: 1px solid white;
    color: inherit;
    padding: 3px;
    width: 95%;
    max-width: 130px;
    box-sizing: border-box;
}

/* 
#version:active, #version:focus {
    outline-style: solid;
    outline-color: #bb86fc;
}
*/

input:is([type="checkbox"], [type="radio"])+label::before {
    color: #bb86fc;
    padding-bottom: 2px;
    white-space: nowrap;
}

input[type="checkbox"]+label::before {
    content: "[ ]";
}

input[type="checkbox"]:checked+label::before {
    content: "[x]";
}

input[type="radio"]+label::before {
    content: "[ ] ";
}

input[type="radio"]:checked+label::before {
    content: "[x] ";
}

input[type="checkbox"].auto-dependency+label::before {
    content: "[+]";
    color: cornflowerblue;
}

/* don't need the :not(:checked) because the tag gets removed if the box is selected, but it's more specific */
input[type="checkbox"].incompatible+label::before {
    content: "[/]";
    color: grey;
}

input[type="checkbox"].missing-dependency+label::before {
    content: "[!]";
    color: red;
}

input[type="checkbox"].override-incompatible+label::before {
    content: "[#]";
    color: pink;
}

.hidden {
    display: none;
}

.hide-arrow>summary::before {
    content: ""
}

#accessibility-warning,
#optifine-warning {
    position: absolute;
    top: 300px;
    border: 1px solid #f0f0f0;
    background-color: black;
    left: 50px;
    right: 50px;
    top: 25%;
    max-width: 480px;
    padding: 10px;
}

#accessibility-warning>p,
#optifine-warning>p {
    margin: auto;
}